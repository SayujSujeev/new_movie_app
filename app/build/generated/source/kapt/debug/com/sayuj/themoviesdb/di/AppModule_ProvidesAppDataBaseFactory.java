// Generated by Dagger (https://dagger.dev).
package com.sayuj.themoviesdb.di;

import android.app.Application;
import com.sayuj.themoviesdb.data.localSource.AppDataBase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesAppDataBaseFactory implements Factory<AppDataBase> {
  private final AppModule module;

  private final Provider<Application> appProvider;

  public AppModule_ProvidesAppDataBaseFactory(AppModule module, Provider<Application> appProvider) {
    this.module = module;
    this.appProvider = appProvider;
  }

  @Override
  public AppDataBase get() {
    return providesAppDataBase(module, appProvider.get());
  }

  public static AppModule_ProvidesAppDataBaseFactory create(AppModule module,
      Provider<Application> appProvider) {
    return new AppModule_ProvidesAppDataBaseFactory(module, appProvider);
  }

  public static AppDataBase providesAppDataBase(AppModule instance, Application app) {
    return Preconditions.checkNotNullFromProvides(instance.providesAppDataBase(app));
  }
}
